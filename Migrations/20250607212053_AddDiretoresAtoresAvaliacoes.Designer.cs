// <auto-generated />
using System;
using FilmesTerror.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmesTerror.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607212053_AddDiretoresAtoresAvaliacoes")]
    partial class AddDiretoresAtoresAvaliacoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FilmesTerror.Models.Ator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Atores");
                });

            modelBuilder.Entity("FilmesTerror.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilmeId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("FilmeId1");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("FilmesTerror.Models.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diretores");
                });

            modelBuilder.Entity("FilmesTerror.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiretorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiretorId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiretorId");

                    b.HasIndex("DiretorId1");

                    b.HasIndex("GeneroId");

                    b.HasIndex("Titulo");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            AnoLancamento = 2012,
                            GeneroId = 1,
                            Titulo = "A Entidade"
                        },
                        new
                        {
                            Id = 8,
                            AnoLancamento = 2014,
                            GeneroId = 1,
                            Titulo = "Annabelle"
                        },
                        new
                        {
                            Id = 3,
                            AnoLancamento = 2007,
                            GeneroId = 1,
                            Titulo = "Atividade Paranormal"
                        },
                        new
                        {
                            Id = 5,
                            AnoLancamento = 2017,
                            GeneroId = 1,
                            Titulo = "Corra!"
                        },
                        new
                        {
                            Id = 4,
                            AnoLancamento = 2018,
                            GeneroId = 1,
                            Titulo = "Hereditário"
                        },
                        new
                        {
                            Id = 2,
                            AnoLancamento = 2013,
                            GeneroId = 1,
                            Titulo = "Invocação do Mal"
                        },
                        new
                        {
                            Id = 7,
                            AnoLancamento = 2017,
                            GeneroId = 1,
                            Titulo = "It: A Coisa"
                        },
                        new
                        {
                            Id = 9,
                            AnoLancamento = 2019,
                            GeneroId = 1,
                            Titulo = "Midsommar"
                        },
                        new
                        {
                            Id = 1,
                            AnoLancamento = 2002,
                            GeneroId = 1,
                            Titulo = "O Chamado"
                        },
                        new
                        {
                            Id = 10,
                            AnoLancamento = 2010,
                            GeneroId = 1,
                            Titulo = "Sobrenatural"
                        });
                });

            modelBuilder.Entity("FilmesTerror.Models.FilmeAtor", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilmeId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "AtorId");

                    b.HasIndex("AtorId");

                    b.HasIndex("FilmeId1");

                    b.ToTable("FilmesAtores");
                });

            modelBuilder.Entity("FilmesTerror.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Terror"
                        });
                });

            modelBuilder.Entity("FilmesTerror.Models.Avaliacao", b =>
                {
                    b.HasOne("FilmesTerror.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmesTerror.Models.Filme", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FilmeId1");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("FilmesTerror.Models.Filme", b =>
                {
                    b.HasOne("FilmesTerror.Models.Diretor", null)
                        .WithMany("Filmes")
                        .HasForeignKey("DiretorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FilmesTerror.Models.Diretor", "Diretor")
                        .WithMany()
                        .HasForeignKey("DiretorId1");

                    b.HasOne("FilmesTerror.Models.Genero", "Genero")
                        .WithMany("Filmes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diretor");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("FilmesTerror.Models.FilmeAtor", b =>
                {
                    b.HasOne("FilmesTerror.Models.Ator", "Ator")
                        .WithMany("FilmesAtuados")
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmesTerror.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmesTerror.Models.Filme", null)
                        .WithMany("Atores")
                        .HasForeignKey("FilmeId1");

                    b.Navigation("Ator");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("FilmesTerror.Models.Ator", b =>
                {
                    b.Navigation("FilmesAtuados");
                });

            modelBuilder.Entity("FilmesTerror.Models.Diretor", b =>
                {
                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("FilmesTerror.Models.Filme", b =>
                {
                    b.Navigation("Atores");

                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("FilmesTerror.Models.Genero", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
